name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write

    strategy:
      matrix:
        node-version: [18.17.0]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Enable Corepack and setup Yarn
      run: |
        corepack enable
        corepack prepare yarn@4.1.1 --activate
    
    - name: Install dependencies
      uses: borales/actions-yarn@v4
      with:
        cmd: install
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Run tests with coverage
      run: |
        echo "Node version:"
        node --version
        echo "Yarn version:"
        yarn --version
        echo "Jest version:"
        yarn jest --version
        echo "Working directory:"
        pwd
        echo "Creating coverage directory..."
        mkdir -p coverage
        chmod 777 coverage
        echo "Running tests with coverage..."
        yarn test:coverage
        echo "Test command completed"
        ls -la
        echo "Contents of current directory"
        ls -la coverage/
        echo "Contents of coverage directory"
        find . -name "lcov.info" -type f
        echo "Searching for lcov.info files"
        echo "Jest config:"
        cat jest.config.js
    
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true 